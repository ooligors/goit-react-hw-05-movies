{"version":3,"file":"static/js/342.ab972339.chunk.js","mappings":"8QAGaA,EAAY,SAAC,GAkBxB,OAlBsC,EAAZC,MACHC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACzB,gBAAIC,UAAWC,EAAAA,EAAAA,GAAf,UACGJ,GACC,gBACEG,UAAWC,EAAAA,EAAAA,GACXC,IAAG,4DAAuDL,GAC1DM,IAAI,MAGN,0BACE,0CAGJ,uBAAIL,KACJ,uCAAeC,OAbWH,EADH,GAkB5B,E,UCrBD,EAAqB,qBCyErB,EAnEkB,WAId,OAAyBQ,EAAAA,EAAAA,UAAS,CAC9BV,MAAM,CAAC,EACPW,SAAQ,EACRC,MAAM,OAHV,eAAOC,EAAP,KAAaC,EAAb,KAMOZ,GAAIa,EAAAA,EAAAA,MAAJb,IACPc,EAAAA,EAAAA,YAAU,WAEN,IAAMC,EAAiB,mCAAG,2FACtBH,GAAS,SAACI,GAAD,eAAC,UAECA,GAFF,IAGDP,SAAQ,EACRC,MAAM,MAJL,IADa,mBASKO,EAAAA,EAAAA,IAAmBjB,GATxB,OASRkB,EATQ,OAUdC,QAAQC,IAAIF,GACZN,GAAS,SAAAI,GACL,yBACOA,GADP,IAEIlB,MAAMoB,EAAKG,MAGlB,IAjBa,gDAmBdT,GAAS,SAACI,GAAD,eAAC,UACnBA,GADkB,IAErBN,MAAK,MAFgB,IAnBK,yBA0BdE,GAAS,SAAAI,GACrB,yBACOA,GADP,IAEIP,SAAQ,GAEC,IA/Ba,4EAAH,qDAmCvBM,GACC,GAAC,CAACf,IAIR,IAAMF,EAAqBa,EAArBb,MAAMW,EAAeE,EAAfF,QAAQC,EAAOC,EAAPD,MAGnB,OACI,gCAEKZ,EAAMwB,OAAS,IAAK,eAAIlB,UAAWC,EAAf,UAAuB,SAACR,EAAD,CAAWC,MAAOA,MAC7DA,EAAMwB,OAAQ,IAAK,+CAEnBb,IAAW,+CACXC,IAAS,wDAGrB,C,4MCvEYa,EAAS,mCAAG,sGACAC,IAAAA,IAAA,0FADA,uBACfN,EADe,EACfA,KADe,kBAKhBA,GALgB,2CAAH,qDAQTO,EAAc,mCAAG,WAAMzB,GAAN,yFACLwB,IAAAA,IAAA,6CACiBxB,EADjB,8CADK,uBACpBkB,EADoB,EACpBA,KADoB,kBAKrBA,GALqB,2CAAH,sDAQdQ,EAAiB,mCAAG,WAAMC,GAAN,yFACRH,IAAAA,IAAA,mGACuEG,EADvE,gCADQ,uBACvBT,EADuB,EACvBA,KADuB,kBAKxBA,GALwB,2CAAH,sDAQjBD,EAAkB,mCAAG,WAAMjB,GAAN,yFACTwB,IAAAA,IAAA,6CACiBxB,EADjB,sDADS,uBACxBkB,EADwB,EACxBA,KADwB,kBAKzBA,GALyB,2CAAH,sDAQlBU,EAAqB,mCAAG,WAAM5B,GAAN,yFACZwB,IAAAA,IAAA,6CACiBxB,EADjB,sDADY,uBAC3BkB,EAD2B,EAC3BA,KAD2B,kBAK5BA,GAL4B,2CAAH,qD,qBCjClC,KAAgB,GAAK,4BAA4B,IAAM,6BAA6B,KAAO,8B","sources":["components/Movies/MovieCast.jsx","webpack://goit-react-hw-05-movies/./src/components/pages/CastPage/CastPage.module.css?0bff","components/pages/CastPage/CastPage.jsx","services/Api.js","webpack://goit-react-hw-05-movies/./src/components/Movies/MovieCastReview.module.css?48fb"],"sourcesContent":["import css from './MovieCastReview.module.css';\nimport PropTypes from 'prop-types';\n\nexport const MovieCast = ({ items }) => {\n  const elements = items.map(({ id, profile_path, name, character }) => (\n    <li className={css.li} key={id}>\n      {profile_path ? (\n        <img\n          className={css.li}\n          src={`https://www.themoviedb.org/t/p/w138_and_h175_face/${profile_path}`}\n          alt=\"\"\n        />\n      ) : (\n        <div>\n          <span>No photo</span>\n        </div>\n      )}\n      <p>{name}</p>\n      <p>Character: {character}</p>\n    </li>\n  ));\n  return elements;\n};\n\nMovieCast.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      profile_path: PropTypes.string,\n      name: PropTypes.string.isRequired,\n      character: PropTypes.string.isRequired,\n    })\n  ),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"ul\":\"CastPage_ul__U7nn8\"};","import {useState, useEffect} from \"react\";\nimport { useParams } from 'react-router-dom';\nimport { MovieCast } from \"components/Movies/MovieCast\";\nimport { getSingleMovieCast } from \"services/Api\";\nimport css from './CastPage.module.css'\n\n\n const CastPage = () => {\n    \n   \n    \n    const [state,setState] = useState({\n        items:{},\n        loading:false,\n        error:null,\n    \n    })\n    const {id}=useParams();\n    useEffect(()=>{\n    \n        const fetchMoviesByCast = async()=>{\n            setState((prevState)=>\n                ({\n                    ...prevState,\n                    loading:true,\n                    error:null,\n                })\n            );\n                try {\n                    const data = await getSingleMovieCast(id);\n                    console.log(data)\n                    setState(prevState=>{\n                        return{\n                            ...prevState,\n                            items:data.cast\n        \n                        }\n                    })\n                } catch (error) {\n                    setState((prevState)=>({\n        ...prevState,\n        error,\n                    }))\n                }\n                finally{\n                    \n                    setState(prevState=>{\n        return{\n            ...prevState,\n            loading:false,\n        }\n                    })\n                }\n            \n        }\n        fetchMoviesByCast();\n        },[id])\n   \n        \n\n   const{items,loading,error}=state;\n   \n\n    return (\n        <>\n           \n            {items.length > 0 && <ul className={css.ul}><MovieCast items={items} /></ul>} \n            {items.length <1 && <p> there are nothing </p>   } \n\n            {loading && <p>...load information</p>}\n            {error && <p>...Information load failed</p>}\n        </>\n    )\n}\nexport default CastPage;","import axios from 'axios';\n\nexport const getMovies = async () => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/trending/all/day?api_key=7af231239b59455ee05c6b874689512b`\n  );\n\n  return data;\n};\n\nexport const getSingleMovie = async id => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=7af231239b59455ee05c6b874689512b`\n  );\n\n  return data;\n};\n\nexport const getMoviesBySearch = async search => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=7af231239b59455ee05c6b874689512b&query=${search}&page=1&include_adult=false`\n  );\n\n  return data;\n};\n\nexport const getSingleMovieCast = async id => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=7af231239b59455ee05c6b874689512b`\n  );\n\n  return data;\n};\n\nexport const getSingleMovieReviews = async id => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=7af231239b59455ee05c6b874689512b`\n  );\n\n  return data;\n};\n\n\n\n\n\n\n// const Key = \"7af231239b59455ee05c6b874689512b\";\n\n// export const fetchApi =()=>{\n// const response = axios.get(`events?size=20&apikey=${Key}`)\n// console.log(response);\n// return response;\n// }\n\n// const instance = axios.create({\n// baseURL:\"https://api.themoviedb.org\"\n// baseURL:`https://api.themoviedb.org/3/movie/550?api_key=7af231239b59455ee05c6b874689512b`\n\n// baseURL:\"https://api.themoviedb.org/3/movie/550?api_key=7af231239b59455ee05c6b874689512b\"\n// https://api.themoviedb.org/3/movie/777670?api_key=7af231239b59455ee05c6b874689512b\n// });\n// export const getMovies=async(_page=1)=>{\n//    const {data} = await instance.get(\"/\",{\n//     params:{\n// api_key=`${Key}`,\n//         _page,\n//     }\n//    });\n//    return data;\n// }\n","// extracted by mini-css-extract-plugin\nexport default {\"li\":\"MovieCastReview_li__uNHum\",\"img\":\"MovieCastReview_img__K4SDT\",\"list\":\"MovieCastReview_list__fQM5T\"};"],"names":["MovieCast","items","map","id","profile_path","name","character","className","css","src","alt","useState","loading","error","state","setState","useParams","useEffect","fetchMoviesByCast","prevState","getSingleMovieCast","data","console","log","cast","length","getMovies","axios","getSingleMovie","getMoviesBySearch","search","getSingleMovieReviews"],"sourceRoot":""}