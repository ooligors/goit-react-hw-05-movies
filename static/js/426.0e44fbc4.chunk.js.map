{"version":3,"file":"static/js/426.0e44fbc4.chunk.js","mappings":"oQAEaA,EAAe,SAAC,GAO3B,OAPyC,EAAZC,MACNC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,QAASC,EAAhB,EAAgBA,eAAhB,OACzB,2BACE,qCAAaA,EAAeC,aAC5B,uBAAIF,MAFGD,EADgB,GAO5B,E,oBCmED,EAnEqB,WAEd,OAAyBI,EAAAA,EAAAA,UAAS,CACjCN,MAAM,CAAC,EACPO,SAAQ,EACRC,MAAM,OAHP,eAAOC,EAAP,KAAaC,EAAb,KAOIR,GAAIS,EAAAA,EAAAA,MAAJT,IACPU,EAAAA,EAAAA,YAAU,WAEN,IAAMC,EAAoB,mCAAG,2FACzBH,GAAS,SAACI,GAAD,eAAC,UAECA,GAFF,IAGDP,SAAQ,EACRC,MAAM,MAJL,IADgB,mBASEO,EAAAA,EAAAA,IAAsBb,GATxB,OASXc,EATW,OAUjBC,QAAQC,IAAIF,GACZC,QAAQC,IAAIF,EAAKG,SACjBF,QAAQC,IAAIF,EAAKG,SACjBT,GAAS,SAAAI,GACL,yBACOA,GADP,IAEId,MAAMgB,EAAKG,SAGlB,IAnBgB,kDAqBjBT,GAAS,SAACI,GAAD,eAAC,UACnBA,GADkB,IAErBN,MAAK,MAFgB,IArBQ,yBA4BjBE,GAAS,SAAAI,GACrB,yBACOA,GADP,IAEIP,SAAQ,GAEC,IAjCgB,6EAAH,qDAqC1BM,GACC,GAAC,CAACX,IAIR,IAAMF,EAAqBS,EAArBT,MAAMO,EAAeE,EAAfF,QAAQC,EAAOC,EAAPD,MAGnB,OAFDS,QAAQC,IAAIlB,IAGP,gCACKA,EAAMoB,OAAS,GAAI,eAAIC,UAAWC,EAAAA,EAAAA,KAAf,UAAyB,SAACvB,EAAD,CAAcC,MAAOA,OAAiB,qEAGlFO,IAAW,+CACXC,IAAS,wDAGrB,C,4MC1EYe,EAAS,mCAAG,sGACAC,IAAAA,IAAA,0FADA,uBACfR,EADe,EACfA,KADe,kBAKhBA,GALgB,2CAAH,qDAQTS,EAAc,mCAAG,WAAMvB,GAAN,yFACLsB,IAAAA,IAAA,6CACiBtB,EADjB,8CADK,uBACpBc,EADoB,EACpBA,KADoB,kBAKrBA,GALqB,2CAAH,sDAQdU,EAAiB,mCAAG,WAAMC,GAAN,yFACRH,IAAAA,IAAA,mGACuEG,EADvE,gCADQ,uBACvBX,EADuB,EACvBA,KADuB,kBAKxBA,GALwB,2CAAH,sDAQjBY,EAAkB,mCAAG,WAAM1B,GAAN,yFACTsB,IAAAA,IAAA,6CACiBtB,EADjB,sDADS,uBACxBc,EADwB,EACxBA,KADwB,kBAKzBA,GALyB,2CAAH,sDAQlBD,EAAqB,mCAAG,WAAMb,GAAN,yFACZsB,IAAAA,IAAA,6CACiBtB,EADjB,sDADY,uBAC3Bc,EAD2B,EAC3BA,KAD2B,kBAK5BA,GAL4B,2CAAH,qD,qBCjClC,KAAgB,GAAK,4BAA4B,IAAM,6BAA6B,KAAO,8B","sources":["components/Movies/MovieReviews.jsx","components/pages/ReviewsPage/ReviewsPage.jsx","services/Api.js","webpack://goit-react-hw-05-movies/./src/components/Movies/MovieCastReview.module.css?48fb"],"sourcesContent":["import PropTypes from 'prop-types';\n\nexport const MovieReviews = ({ items }) => {\n  const elements = items.map(({ id, content, author_details }) => (\n    <li key={id}>\n      <h3>Author: {author_details.username}</h3>\n      <p>{content}</p>\n    </li>\n  ));\n  return elements;\n};\n\nMovieReviews.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n      author_details: PropTypes.shape({\n        username: PropTypes.string.isRequired,\n      }),\n    })\n  ),\n};\n","\n\n\nimport {useState, useEffect} from \"react\";\nimport { useParams } from 'react-router-dom';\nimport { MovieReviews } from \"components/Movies/MovieReviews\";\nimport { getSingleMovieReviews } from \"services/Api\";\nimport css from '../../Movies/MovieCastReview.module.css';\n\n\n const ReviewsPage = () => {\n    \n       const [state,setState] = useState({\n        items:{},\n        loading:false,\n        error:null,\n    \n    })\n  \n    const {id}=useParams();\n    useEffect(()=>{\n    \n        const fetchMoviesByReviews = async()=>{\n            setState((prevState)=>\n                ({\n                    ...prevState,\n                    loading:true,\n                    error:null,\n                })\n            );\n                try {\n                    const data = await getSingleMovieReviews(id);\n                    console.log(data)\n                    console.log(data.results);\n                    console.log(data.results);\n                    setState(prevState=>{\n                        return{\n                            ...prevState,\n                            items:data.results  //////////////////\n       \n                        }\n                    })\n                } catch (error) {\n                    setState((prevState)=>({\n        ...prevState,\n        error,\n                    }))\n                }\n                finally{\n                    \n                    setState(prevState=>{\n        return{\n            ...prevState,\n            loading:false,\n        }\n                    })\n                }\n            \n        }\n        fetchMoviesByReviews();\n        },[id])\n   \n        \n\n   const{items,loading,error}=state;\n   console.log(items)\n\n    return (\n        <>           \n            {items.length > 0 ? <ul className={css.list}><MovieReviews items={items} /></ul> : <p>We don`t have any reviews for this movie.</p> }\n            {/* {items.length <1 &&  <p>We don`t have any reviews for this movie.</p>    }  */}\n\n            {loading && <p>...load information</p>}\n            {error && <p>...Information load failed</p>}\n        </>\n    )\n}\nexport default ReviewsPage;","import axios from 'axios';\n\nexport const getMovies = async () => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/trending/all/day?api_key=7af231239b59455ee05c6b874689512b`\n  );\n\n  return data;\n};\n\nexport const getSingleMovie = async id => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=7af231239b59455ee05c6b874689512b`\n  );\n\n  return data;\n};\n\nexport const getMoviesBySearch = async search => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=7af231239b59455ee05c6b874689512b&query=${search}&page=1&include_adult=false`\n  );\n\n  return data;\n};\n\nexport const getSingleMovieCast = async id => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=7af231239b59455ee05c6b874689512b`\n  );\n\n  return data;\n};\n\nexport const getSingleMovieReviews = async id => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=7af231239b59455ee05c6b874689512b`\n  );\n\n  return data;\n};\n\n\n\n\n\n\n// const Key = \"7af231239b59455ee05c6b874689512b\";\n\n// export const fetchApi =()=>{\n// const response = axios.get(`events?size=20&apikey=${Key}`)\n// console.log(response);\n// return response;\n// }\n\n// const instance = axios.create({\n// baseURL:\"https://api.themoviedb.org\"\n// baseURL:`https://api.themoviedb.org/3/movie/550?api_key=7af231239b59455ee05c6b874689512b`\n\n// baseURL:\"https://api.themoviedb.org/3/movie/550?api_key=7af231239b59455ee05c6b874689512b\"\n// https://api.themoviedb.org/3/movie/777670?api_key=7af231239b59455ee05c6b874689512b\n// });\n// export const getMovies=async(_page=1)=>{\n//    const {data} = await instance.get(\"/\",{\n//     params:{\n// api_key=`${Key}`,\n//         _page,\n//     }\n//    });\n//    return data;\n// }\n","// extracted by mini-css-extract-plugin\nexport default {\"li\":\"MovieCastReview_li__uNHum\",\"img\":\"MovieCastReview_img__K4SDT\",\"list\":\"MovieCastReview_list__fQM5T\"};"],"names":["MovieReviews","items","map","id","content","author_details","username","useState","loading","error","state","setState","useParams","useEffect","fetchMoviesByReviews","prevState","getSingleMovieReviews","data","console","log","results","length","className","css","getMovies","axios","getSingleMovie","getMoviesBySearch","search","getSingleMovieCast"],"sourceRoot":""}